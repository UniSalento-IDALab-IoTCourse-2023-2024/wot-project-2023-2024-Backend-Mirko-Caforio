spring.application.name=AcquisitionService
spring.datasource.url=jdbc:crate://crate:${CRATE_TRANSPORT_PORT2}/
spring.datasource.username=${CRATE_USERNAME}
spring.datasource.password=${CRATE_PASSWORD}
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.driver-class-name=io.crate.client.jdbc.CrateDriver

# logging.level.org.springframework.data.jdbc=DEBUG
# logging.level.org.springframework.jdbc=DEBUG

# Inizializzazione del database
spring.sql.init.mode=always
spring.sql.init.platform=postgres
spring.sql.init.schema-locations=classpath:db/schema.sql


# MQTT Configuration
mqtt.clientId=acquisitionService
mqtt.hostname=mosquitto
mqtt.port=${MOSQUITTO_PORT}
mqtt.username=${MOSQUITTO_USERNAME}
mqtt.password=${MOSQUITTO_PASSWORD}

# MQTT Topics
mqtt.cqrs.auth.request.topic=cqrs/auth/request
mqtt.cqrs.supervisor.email.request.topic=cqrs/supervisor/email/request
mqtt.acquisition.auth.response.topic=acquisition/auth/response
mqtt.acquisition.supervisor.email.response.topic=acquisition/supervisor/email/response
mqtt.notification.request.topic=notification/request
mqtt.acquisition.data.save.topic=acquisition/data/save
mqtt.machine.request.stop.topic=machine/request/stop

secret.key=${SECRET_KEY}